<template>
  <div class="container" >
	<!--工具栏-->
	<div class="toolbar" style="float:left;padding-top:10px;padding-left:15px;">
		<el-form :inline="true" :model="filters" :size="size">
			<el-form-item>
				<el-input v-model.trim="filters.boxCode" placeholder="托盘条码"></el-input>
			</el-form-item>
			<el-form-item>
				<el-select v-model="filters.areaId"
							:placeholder="$t('field.Core.corewhloc.Please enter the areaName')"
							auto-complete="off"
							style="width: 100%;"
							clearable>
					<el-option v-for="item in areaTypes"
							:key="item.Id"
							:label="item.areaName"
							:value="item.id">
					</el-option>
				</el-select>
			</el-form-item>
			<el-form-item>
				<el-select v-model="filters.locId"
							:placeholder="$t('请选择库位')"
							auto-complete="off"
							style="width: 100%;"
							clearable>
					<el-option v-for="item in whLocs"
							:key="item.Id"
							:label="item.craneId"
							:value="item.id">
					</el-option>
				</el-select>
			</el-form-item>
			<el-form-item>
				<kt-button :label="$t('action.search')" perms="core:coreStock:view" type="primary" @click="findPage(null)"/>
			</el-form-item>			
		</el-form>
	</div>
	<!--表格内容栏-->
	<kt-table :height="388" permsShowDetail="core:coreStock:showDetail"  permsOut="core:coreStock:out"
		:data="pageResult" :columns="columns" 
		@findPage="findPage" @handleShowDetail="handleShowDetail" @handleOut="handleOut" :showOperation=false :showDetailandOut=true>
	</kt-table>	

	<!--新增编辑界面-->
	<el-dialog :title="'库位库存信息'" width="70%" :visible.sync="editDialogVisible" :close-on-click-modal="false">
		<el-form :model="dataForm" label-width="80px"  ref="dataForm" :size="size" label-position="right">		
			<el-row :gutter="20">
				<el-col :span="6">
					<el-form-item label="托盘类型" prop="pileType" >
						<el-select v-model="dataForm.pileType"  style="width: 100%;" disabled="false"> 
							<el-option v-for="item in dicts.trayType" :key="item.value"
								:label="item.label" :value="item.value" >
							</el-option>
						</el-select>
					</el-form-item>
				</el-col>
				<!-- <el-col :span="6">
					<el-form-item label="序列号" prop="locIndex"  v-if="true">
					<el-input v-model="dataForm.locIndex" auto-complete="off" readonly></el-input>
					</el-form-item>
				</el-col> -->
				<el-col :span="6">
					<el-form-item label="托盘条码" prop="boxCode"  v-if="true">
					<el-input v-model="dataForm.boxCode" auto-complete="off" readonly></el-input>
					</el-form-item>
				</el-col>	
				<el-col :span="6">
					<el-form-item label="状态" prop="status" >
						<el-select v-model="dataForm.status"  style="width: 100%;" disabled="false">
							<el-option v-for="item in dicts.stockStatus" :key="item.value"
								:label="item.label" :value="item.value">
							</el-option>
						</el-select>
					</el-form-item>
				</el-col>	
			</el-row>
			<el-row :gutter="20">
				
				<el-col :span="6">
					<el-form-item label="是否锁定" prop="locked" >
						<el-select v-model="dataForm.locked"  style="width: 100%;" disabled="false">
							<el-option v-for="item in dicts.isLocked" :key="item.value"
								:label="item.label" :value="item.value">
							</el-option>
						</el-select>
					</el-form-item>
				</el-col>
				<el-col :span="6">
					<el-form-item label="盘库状态" prop="pkStatus" >
						<el-select v-model="dataForm.pkStatus"  style="width: 100%;" disabled="false">
							<el-option v-for="item in dicts.pkStatus" :key="item.value"
								:label="item.label" :value="item.value">
							</el-option>
						</el-select>
					</el-form-item>
				</el-col>	
				<!-- <el-col :span="6">
					<el-form-item label="满载率" prop="occupancy"  v-if="true">
					<el-input v-model="dataForm.occupancy" auto-complete="off" readonly></el-input>
					</el-form-item>
				</el-col>		 -->
			</el-row>

			<!-- <el-form-item label="" prop="id"  v-if="false">
				<el-input v-model="dataForm.id" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="" prop="whId"  v-if="false">
				<el-input v-model="dataForm.whId" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="" prop="classifyId"  v-if="false">
				<el-input v-model="dataForm.classifyId" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="托盘类型" prop="pileType"  v-if="false">
				<el-input v-model="dataForm.pileType" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="" prop="areaId"  v-if="false">
				<el-input v-model="dataForm.areaId" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="" prop="locId"  v-if="false">
				<el-input v-model="dataForm.locId" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="序列号" prop="locIndex"  v-if="true">
				<el-input v-model="dataForm.locIndex" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="托盘条码" prop="boxCode"  v-if="true">
				<el-input v-model="dataForm.boxCode" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="状态" prop="status"  v-if="true">
				<el-input v-model="dataForm.status" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="" prop="infocount"  v-if="false">
				<el-input v-model="dataForm.infocount" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="是否锁定" prop="locked"  v-if="true">
				<el-input v-model="dataForm.locked" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="创建时间" prop="createTime"  v-if="false">
				<el-input v-model="dataForm.createTime" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="相同代码" prop="sameCode"  v-if="true">
				<el-input v-model="dataForm.sameCode" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="更新时间" prop="changeTime"  v-if="false">
				<el-input v-model="dataForm.changeTime" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="满载率" prop="occupancy"  v-if="true">
				<el-input v-model="dataForm.occupancy" auto-complete="off"></el-input>
			</el-form-item>
			<el-form-item label="盘库状态" prop="pkStatus"  v-if="true">
				<el-input v-model="dataForm.pkStatus" auto-complete="off"></el-input>
			</el-form-item> -->
		</el-form>	
		<kt-table-list :height="300" 
		:data="pageResultDetail" :columns="detailColumns" >
		</kt-table-list>	
	</el-dialog>
  </div>
</template>

<script>
import KtTable from "@/views/Core/KtTable"
import KtButton from "@/views/Core/KtButton"
import { format } from "@/utils/datetime"
import KtTableList from "@/views/Core/KtTableList"
export default {
	components:{
			KtTable,
			KtButton,
			KtTableList
	},
	data() {
		return {
			size: 'small',
			filters: {
				label: ''
			},
			columns: [
				//{prop:"id", label:"编号", minWidth:100},
				//{prop:"whId", label:"", minWidth:100},
				//{prop:"classifyId", label:"", minWidth:100},
				//{prop:"pileType", label:"托盘类型", minWidth:100 ,formatter:this.selectionFormat},
				{prop:"areaId", label:"库区", minWidth:100,formatter:this.areaFormat},
				{prop:"locId", label:"库位", minWidth:100,formatter:this.locFormat},
				//{prop:"locIndex", label:"序列号", minWidth:100},
				{prop:"boxCode", label:"托盘条码", minWidth:100},
				{prop:"status", label:"状态", minWidth:100,formatter:this.selectionFormat},
				//{prop:"infocount", label:"", minWidth:100},
				{prop:"locked", label:"是否锁定", minWidth:100,formatter:this.selectionFormat},
				//{prop:"createTime", label:"创建时间", minWidth:120,formatter:this.dateFormat},
				//{prop:"sameCode", label:"相同代码", minWidth:100},
				{prop:"changeTime", label:"更新时间", minWidth:120,formatter:this.dateFormat},
				//{prop:"occupancy", label:"满载率", minWidth:100},
				{prop:"pkStatus", label:"盘库状态", minWidth:100,formatter:this.selectionFormat},
			],
			detailColumns: [
				//{prop:"id", label:"", minWidth:100},
				//{prop:"stockId", label:"", minWidth:100},
				//{prop:"whId", label:"", minWidth:100},
				//{prop:"pos", label:"", minWidth:100},
				//{prop:"loctionId", label:"库位", minWidth:100,formatter:this.selectionFormats},
				//{prop:"itemId", label:"", minWidth:100},
				{prop:"itemCode", label:"产品编号", minWidth:100},
				{prop:"inTime", label:"入库时间", minWidth:120,formatter:this.dateFormat},
				//{prop:"outTime", label:"出库时间", minWidth:120,formatter:this.dateFormat},
				//{prop:"receiptlnId", label:"", minWidth:100},
				//{prop:"receiptlOutId", label:"", minWidth:100},
				//{prop:"soOutId", label:"", minWidth:100},
				{prop:"wmsBanchNo", label:"批次号", minWidth:100},
				{prop:"countDb", label:"库存数量", minWidth:100},
				{prop:"pkStatus", label:"盘库状态", minWidth:100,formatter:this.selectionFormat},
				{prop:"stockStatus", label:"库存状态", minWidth:100,formatter:this.selectionFormat},
				{prop:"bussStatus", label:"业务状态", minWidth:100,formatter:this.selectionFormat},
				//{prop:"businessCreateTime", label:"生产日期", minWidth:120,formatter:this.dateFormat},
				{prop:"exp", label:"保质期", minWidth:120,formatter:this.dateFormat},
			],
			pageRequest: { pageNum: 1, pageSize: 10 },
			pageResult: {},
			pageResultDetail: {},
			dicts:{},
			editDialogVisible: false, // 新增编辑界面是否显示
			editLoading: false,	
			whLocs: [],		
			areaTypes: [],
			// 新增编辑界面数据
			dataForm: {
				id: null,
				whId: null,
				classifyId: null,
				pileType: null,
				areaId: null,
				locId: null,
				locIndex: null,
				boxCode: null,
				status: null,
				infocount: null,
				locked: null,
				createTime: null,
				sameCode: null,
				changeTime: null,
				occupancy: null,
				pkStatus: null,
			}
		}
	},
	methods: {
		// 获取分页数据
		findPage: function (data) {
			if(data !== null) {
				this.filters.pageNum=data.pageRequest.pageNum
			    this.filters.pageSize=data.pageRequest.pageSize
			}
			this.$api.coreStock.findPage(this.filters).then((res) => {
				this.pageResult = res.data
			}).then(data!=null?data.callback:'')
		},				
		// 获取明细数据
		findDetailPage: function (data) {
			this.dicts=this.$store.state.dict.dicts
			this.$api.coreStock.GetListByStockId(data).then((res) => {
				this.pageResultDetail = {content:res.data}
			}).then(data!=null?data.callback:'')
		},		
		// 显示详情界面
		handleShowDetail: function (params) {
			this.editDialogVisible = true
			this.dataForm = Object.assign({}, params.row)
			this.findDetailPage(params.row);
		},
		//出库
		handleOut: function (params) {
			this.editDialogVisible = true
			this.dataForm = Object.assign({}, params.row)
			this.findDetailPage(params.row);
		},		
		// 时间格式化
      	dateFormat: function (row, column, cellValue, index){
          	return format(row[column.property])
      	},	
		//获取库房名称
		findWhloc: function () {
			this.$api.corewhloc.findPage().then((res) => {
				this.whLocs = res.data.content
			})
		},
		findAreaTypes: function () {
			this.$api.corewharea.findPage().then((res) => {
				this.areaTypes = res.data.content
			})
		},
		findAreaTypes: function () {
			this.$api.corewharea.findPage().then((res) => {
				this.areaTypes = res.data.content
			})
		},
		locFormat: function (row, column, cellValue, index) {
			let key = ""
			let propt = column.property;
			let val = row[column.property];
			let dict = this.whLocs;
			console.log(propt);
			//console.log(dict);
			for (let i = 0; i < dict.length; i++) {
				if (dict[i].id == val) {
				return dict[i].craneId;
				}
			}
			return row[column.property]
		},
		areaFormat: function (row, column, cellValue, index) {
			let key = ""
			let propt = column.property;
			let val = row[column.property];
			let dict = this.areaTypes;
			for (let i = 0; i < dict.length; i++) {
				if (dict[i].id == val) {
				return dict[i].areaName;
				}
			}
			return row[column.property]
		},
		selectionFormat: function (row, column, cellValue, index){
			let key=""
			let propt=column.property;
			if(propt=="pileType"){
				key="trayType"
			}else if(propt=="status" || propt=="stockStatus"){
				key="stockStatus"
			}
			else if(propt=="pkStatus"){
				key="pkStatus"
			}else if(propt=="bussStatus"){
				key="businessStatus"
			}else if(propt=="locked"){
				key="isLocked"
			}
		    let val=row[column.property];
			let dict = this.$store.state.dict.dicts[key];
			if(dict==undefined){
					return row[column.property]
			}
			for(let i=0;i<dict.length;i++){
				if(dict[i].value==val){
					return dict[i].label;
				}
			}
          	return row[column.property]
      	}
	},
	mounted(){
		this.findWhloc();
		this.findAreaTypes();
	}
}
</script>

<style scoped>

</style>