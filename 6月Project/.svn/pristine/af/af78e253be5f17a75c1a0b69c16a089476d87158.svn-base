using System;
using System.Collections.Generic;
using GK.WCS.Common;
using GK.WCS.Common.task;
using GK.WCS.Carrier;
using GK.WCS.Common.core.dto;
using GK.WCS.Scan;
using GK.WCS.DAL;
using GK.WCS.Entity;
using System.Threading;

namespace GK.WCS.Controller {
    public abstract class CarrierAllocateJobTask : ZtTask {

        protected CarrierConnect connect;
        protected DateLogicReader dateLogicReader ;


        protected ITaskCraneServer craneTaskDAL = ServerFactray.getServer<ITaskCraneServer>();
        protected ITaskCarrierServer CarrierDAL = ServerFactray.getServer<ITaskCarrierServer>();
        protected int CarrierId=1;
        public CarrierAllocateJobTask(int carrierId) {
            time = 600;
            CarrierId = carrierId;
        }
        protected override bool init()
        {
            connect = (CarrierConnect)TaskPool.get<CarrierConnect>(CarrierId); 
            return true;
        }

        protected void sendCrarrer(short codestate,TaskCarrier carrier,short wbegin ,short rbegin) 
        {           
            connect.SendTask(codestate,carrier, wbegin);
            connect.sendTaskHandshake(wbegin, 1);
            for (int i = 0; i < 3; i++)
            {                
                Thread.Sleep(10);
                if (Tools.ushort16(connect.ReadTaskHandshake(rbegin, 2), 0) == 2)
                {
                    connect.sendTaskHandshake(wbegin, 0);
                }             
            }
        }

       
    }
}
