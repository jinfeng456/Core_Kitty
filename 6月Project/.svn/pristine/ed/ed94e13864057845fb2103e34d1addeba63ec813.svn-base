using GK.Common;
using GK.WMS.DAL;
using GK.WMS.Entity;
using HY.WCS.DAL.dto;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Web;
using System.Web.Http;
using System.Web.Security;

using Web.Authorize;
using WebApi.util;

namespace WebApi
{
    //[RoutePrefix("api")]
    public class LoginController : BaseApiController
    {
        ISysAuthorityServer authorityServer = WMSDalFactray.getDal<ISysAuthorityServer>();

        [HttpPost, Route("login/{name}")]
        public BaseResult login(String name, [FromBody]SysUser user)
        {
            String data = " 0";
            string password2 = HttpContext.Current.Request["password"];
            string password = GKMD5.MD5Encrypt(user.passwords);

            List<SysUser> userList = authorityServer.GetUser(name, password);

            if (userList.Count > 0)
            {
                data = userList[0].id.ToString();
                FormsAuthenticationTicket ticket = new FormsAuthenticationTicket(0, FormAuthenticationFilterAttribute.cookieName, DateTime.Now,
                                DateTime.Now.AddHours(1), true, data, FormsAuthentication.FormsCookiePath);
                //返回登录结果、用户信息、用户验证票据信息
                String Ticket = FormsAuthentication.Encrypt(ticket);
                return new BaseResult(Ticket);
                //存储为cookie
                //HttpCookie cookie = new HttpCookie(FormAuthenticationFilterAttribute.cookieName,Ticket);
                // cookie.Path = FormsAuthentication.FormsCookiePath;
                // HttpContext.Current.Response.AppendCookie(cookie);


            }
            return new BaseResult("");
        }


        [HttpPost, Route("login")]
        public BaseResult login([FromBody] UserDto user)
        {
            List<SysUser> listByName = authorityServer.GetUser(user.account);
            if (listByName == null || listByName.Count == 0)
            {
                return BaseResult.Error(500, "账号不存在！");
            }
            List<SysUser> listByNamePwd = authorityServer.GetUser(user.account, GKMD5.MD5Encrypt(user.password));
            if (listByNamePwd == null || listByNamePwd.Count == 0)
            {
                return BaseResult.Error(500, "密码不正确！");
            }
            if (listByName[0].userstatus == 0)
            {
                return BaseResult.Error(500, "账号已锁定！");
            }
            AuthenticatioToken token = new AuthenticatioToken();
            token.token = user.account;
            return BaseResult.Ok(token);
        }

        [HttpPost, Route("logout")]
        public BaseResult logout([FromBody] UserDto user)
        {
           
            return BaseResult.Ok("");
        }
        

        
        [HttpPost, Route("indexData")]
        public BaseResult indexData([FromBody] UserDto user)
        {
           String name=CookieHelper.LoginName();
            List<Message> list = new   List<Message> ();
            list.Add(new Message("磷酸奥司他韦颗粒库存不足","合格磷酸奥 司他韦颗粒库数量不足需及时安排生产，合格磷酸奥司他韦颗粒库数量不足需及时安排生产",100,1));
            list.Add(new Message("消息2","合格磷酸 奥司他韦颗粒 奥司他韦颗 粒库数量 不足需及时安 排生产",100,1));
            
            return BaseResult.Ok(list);
        }

         


    }

    public class Message{
        public Message(String title,String info,int count,int type) {
            this.info=info;
            this.count=count;
            this.type=type;
            this.title=title;
            }
      public  String title;
       public String info;
       public int count;
       public int type;
    }
}
