<template>
  <div>
    <!--表格栏-->
    <el-table :data="data.content"
              :highlight-current-row="highlightCurrentRow"
              @selection-change="selectionChange"
              @current-change="handleCurrentChange"
              v-loading="loading"
              :element-loading-text="$t('action.loading')"
              :border="border"
              :stripe="stripe"
              :show-overflow-tooltip="showOverflowTooltip"
              :max-height="maxHeight"
              :height="height"
              :size="size"
              :align="align"
              style="width:100%;">
      <el-table-column type="selection"
                       width="40"
                       v-if="showBatchDelete & showOperation"></el-table-column>
      <!-- 序号 -->
      <el-table-column :label="$t('action.desc')"
                       width="50"
                       fixed="left"
                       v-if="true"
                       header-align="center"
                       align="center">
        <template slot-scope="scope">
          <span>{{scope.$index+1}}</span>
        </template>
      </el-table-column>
      <el-table-column v-for="column in columns"
                       header-align="center"
                       align="center"
                       :prop="column.prop"
                       :label="$t(column.label)"
                       :width="column.width"
                       :min-width="column.minWidth"
                       :fixed="column.fixed"
                       :key="column.prop"
                       :type="column.type"
                       :formatter="column.formatter"
                       :sortable="column.sortable==null?true:column.sortable">
      </el-table-column>
      <!-- 显示编辑删除 -->
      <el-table-column :label="$t('action.operation')"
                       width="300"
                       fixed="right"
                       v-if="showOperation"
                       header-align="center"
                       align="center">
        <template slot-scope="scope">
          <kt-button icon="fa fa-edit"
                     :label="$t('action.details')"
                     :perms="permsdetails"
                     :size="size"
                     @click="handledetails(scope.$index, scope.row)" />
          <kt-button icon="fa fa-edit"
                     :label="$t('action.edit')"
                     :perms="permsEdit"
                     :size="size"
                     @click="handleEdit(scope.$index, scope.row)" />
          <kt-button icon="fa fa-edit" v-if="showTransform"
                     :label="$t('action.transform')"
                     :perms="permstransform"
                     :size="size"
                     type="danger"
                     @click="handleTransform(scope.$index, scope.row)" />
        </template>
      </el-table-column>
      <!-- 显示恢复启用 -->
      <!-- <el-table-column :label="$t('action.operation')" width="185" fixed="right" v-if="showDetail" header-align="center" align="center">
      <template slot-scope="scope">
          <kt-button icon="fa fa-edit" :label="$t('Inquiry.restore')" :perms="permsRestore" :size="size" @click="handleRestore(scope.$index, scope.row)" />
          <kt-button icon="fa fa-trash" :label="$t('Inquiry.Disable')" :perms="permsDisable" :size="size" type="danger" @click="handleDisable(scope.$index, scope.row)" />
        </template>
      </el-table-column> -->
      <!-- 显示查看明细和出库 -->
      <el-table-column :label="$t('action.operation')"
                       width="185"
                       fixed="right"
                       v-if="showDetailandOut"
                       header-align="center"
                       align="center">
        <template slot-scope="scope">
          <kt-button icon="fa fa-edit"
                     :label="$t('action.showDetail')"
                     :perms="permsShowDetail"
                     :size="size"
                     @click="handleShowDetail(scope.$index, scope.row)" />
          <kt-button icon="fa fa-trash"
                     :label="$t('action.out')"
                     :perms="permsOut"
                     :size="size"
                     type="danger"
                     @click="handleOut(scope.$index, scope.row)" />
        </template>
      </el-table-column>
      <!-- 查看明细 -->
      <el-table-column :label="$t('action.operation')"
                       width="185"
                       fixed="right"
                       v-if="showDetail"
                       header-align="center"
                       align="center">
        <template slot-scope="scope">
          <kt-button icon="fa fa-edit"
                     :label="$t('action.showDetail')"
                     :perms="permsShowDetail"
                     :size="size"
                     @click="handleShowDetail(scope.$index, scope.row)" />
        </template>
      </el-table-column>
    </el-table>
    <!--分页栏-->
    <div class="toolbar"
         style="padding:10px;">
      <!-- <kt-button :label="$t('action.batchDelete')" :perms="permsDelete" :size="size" type="danger" @click="handleBatchDelete()"
        :disabled="this.selections.length===0" style="float:left;" v-if="showBatchDelete & showOperation"/> -->
      <el-pagination layout="total, prev, pager, next, jumper"
                     @current-change="refreshPageRequest"
                     :current-page="pageRequest.pageNum"
                     :page-size="pageRequest.pageSize"
                     :total="data.totalSize"
                     style="float:right;"
                     v-if="showPagination">
      </el-pagination>
    </div>
  </div>
</template>

<script>
import KtButton from "@/views/Core/KtButton"
export default {
  name: 'WtTable',
  components: {
    KtButton
  },
  props: {
    columns: Array, // 表格列配置
    data: Object, // 表格分页数据
    permsEdit: String,  // 编辑权限标识
    permsdetails: String,  // 明细权限标识
    permstransform: String,  // 转入库单权限标识
    permsRestore: String, //恢复权限标识
    permsDisable: String, //禁用权限标识
    permsShowDetail: String, //查看明细
    permsOut: String, //出库
    size: { // 尺寸样式
      type: String,
      default: 'mini'
    },
    align: {  // 文本对齐方式
      type: String,
      default: 'left'
    },
    maxHeight: {  // 表格最大高度
      type: Number,
      default: 420
    },
    height: {  // 表格最大高度
      type: Number,
      default: 250
    },
    showOperation: {  // 是否显示操作组件
      type: Boolean,
      default: true
    },
    showTransform:{
      type: Boolean,
      default: true
    },
    showDetail: {  // 是否显示明细
      type: Boolean,
      default: false
    },
    showDetailandOut: { //是否显示明细出库
      type: Boolean,
      default: false
    },
    border: {  // 是否显示边框
      type: Boolean,
      default: false
    },
    stripe: {  // 是否显示斑马线
      type: Boolean,
      default: true
    },
    highlightCurrentRow: {  // // 是否高亮当前行
      type: Boolean,
      default: true
    },
    showOverflowTooltip: {  // 是否单行显示
      type: Boolean,
      default: true
    },
    showBatchDelete: {  // 是否显示操作组件
      type: Boolean,
      default: true
    },
    showPagination: {  // 是否显示分页组件
      type: Boolean,
      default: true
    }
  },
  data () {
    return {
      // 分页信息
      pageRequest: {
        pageNum: 1,
        pageSize: 10
      },
      loading: false,  // 加载标识
      selections: []  // 列表选中列
    }
  },
  methods: {
    // 分页查询
    findPage: function () {
      this.loading = true
      let callback = res => {
        this.loading = false
      }
      this.$emit('findPage', { pageRequest: this.pageRequest, callback: callback })
    },
    // 选择切换
    selectionChange: function (selections) {
      this.selections = selections
      this.$emit('selectionChange', { selections: selections })
    },
    // 选择切换
    handleCurrentChange: function (val) {
      this.$emit('handleCurrentChange', { val: val })
    },
    // 换页刷新
    refreshPageRequest: function (pageNum) {
      this.pageRequest.pageNum = pageNum
      this.findPage()
    },
    // 明细
    handledetails: function (index, row) {
      this.$emit('handledetails', { index: index, row: row })
    },
     // 编辑
		handleEdit: function (index, row) {
      this.$emit('handleEdit', {index:index, row:row})
		},
    // 转入库单
    handleTransform: function (index, row) {
      this.$emit('handleTransform', { index: index, row: row })
    },
    //查看明细
    handleShowDetail: function (index, row) {
      this.$emit('handleShowDetail', { index: index, row: row })
    },
    //出库
    handleOut: function (index, row) {
      this.$emit('handleOut', { index: index, row: row })
    },
    // 删除操作
    delete: function (ids) {
      this.$confirm('确认删除选中记录吗？', '提示', {
        type: 'warning'
      }).then(() => {
        let params = []
        let idArray = (ids + '').split(',')
        for (var i = 0; i < idArray.length; i++) {
          params.push({ 'id': idArray[i] })
        }
        this.loading = true
        let callback = res => {
          if (res.code == 200) {
            this.$message({ message: '删除成功', type: 'success' })
            this.findPage()
          } else {
            this.$message({ message: '操作失败, ' + res.msg, type: 'error' })
          }
          this.loading = false
        }
        this.$emit('handleDelete', { params: params, callback: callback })
      }).catch(() => {
      })
    }
  },
  mounted () {
    this.refreshPageRequest(1)
  }
}
</script>

<style scoped>
</style>
