using System;
using System.Collections.Generic;
using GK.WCS.Common;
using GK.WCS.Common.task;
using GK.WCS.Carrier;
using CMNetLib.Robots.CarrierChain;
using GK.WCS.Common.core.dto;
using GK.WCS.Scan;
using HY.Ws.Mes;
using GK.WCS.DAL;
using GK.WCS.Entity;
using GK.WMS.Entity;
using HY.Ws.Mes.huaxMes;

namespace GK.WCS.Controller {
    public abstract class CarrierBeginTaskAbs:ZtTask {

        protected CarrierWriteConnect connect;
        protected DateLogicReader dateLogicReader ;


        protected ITaskCraneServer craneTaskDAL = ServerFactray.getServer<ITaskCraneServer>();
        protected ITaskCarrierServer CarrierDAL = ServerFactray.getServer<ITaskCarrierServer>();

        public CarrierBeginTaskAbs() {
            time = 600;
        }
        protected void sendCrarrer(CarrierWriteConnect connect,TaskCarrier carrier) {
            int taskNo = carrier.TaskNo;
            ushort from = carrier.StartPath;
            ushort end = carrier.EndPath;

            connect.SendTask(taskNo,from,end);
            CarrierDAL.UpdateTaskCarrierStatus(carrier.id,2);

        }

        public void contralscan(DateLogicReader dateLogicReader,HyMachineState ms) {

            if(ms == null) {
                return;
            }
            if(ms.Status == MachineStatus.运行) {
                dateLogicReader.startScan();
            } else {
                dateLogicReader.getStopScan();

            }
        }
        /**
         * type 1 裸光纤 2 着色纤
         */
        protected void saveAndcreateInfoTask(int stn ,String code,int width,int type) {

        }
       

    }
}
