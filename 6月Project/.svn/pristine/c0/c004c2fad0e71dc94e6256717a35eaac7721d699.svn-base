
using System;
using System.Data;
using Dapper;
using System.Collections.Generic;
using GK.WMS.Entity;
using System.Linq;
using GK.WMS.DAL;
using GK.WMS.Entity.wms;
using GK.Engine.WMS.wms;

namespace GK.Engine.WMS
{
    public class OtherOutEngine : WmsBaseEngine
    {
        ISequenceIdServer sequenceIdServer = WMSDalFactray.getDal<ISequenceIdServer>();

        public WhReceiptPk whReceiptPk = null;
        protected override bool Execute(IDbConnection Connection, IDbTransaction transaction)
        {

            List<CoreStockParam> list = GetStockList(Connection, transaction, whReceiptPk);
            //验证逻辑

            List<long> stockIdList = new List<long>();
            for (int i = 0; i < list.Count; i++)
            {
                CoreStockParam param = list[i];
                if (!stockIdList.Contains(param.stockId))
                {
                    CommentFunction.InsertTask(Connection, transaction, param, 1, 206, 2);
                    CommentFunction.UpdateStock(Connection, transaction, param.id, 3);
                }
                CommentFunction.UpdateStockDetail(Connection, transaction, param.stockDetailId, 3);
                stockIdList.Add(param.stockId);
            }
            return true;
        }

        public List<CoreStockParam> GetStockList(IDbConnection Connection, IDbTransaction transaction, WhReceiptPk model)
        {
            string sql = @"SELECT *,B.id AS stockDetailId FROM dbo.Core_stock A 
                         LEFT OUTER JOIN dbo.core_stock_detail B ON A.id = B.stock_Id WHERE stockStatus<>0 ";

            if (model.itemId != null)
            {
                sql += " and item_Id = @itemId ";
            }

            if (model.banchNo != null)
            {
                sql += " AND wms_Banch_No =@banchNo ";
            }
            if (model.beginTime != null)
            {
                sql += " AND change_Time >@beginTime ";
            }
            if (model.finshTime != null)
            {
                sql += " AND change_Time <@finshTime ";
            }

            return Connection.Query<CoreStockParam>(sql, model, transaction).ToList();
        }
    }
}
