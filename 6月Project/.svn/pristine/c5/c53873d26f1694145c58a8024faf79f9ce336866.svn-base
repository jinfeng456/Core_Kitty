using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
using System.Windows.Forms;
namespace libnodaveTest1
{
    public partial class Form1 : Form
    {
        #region libnodave相关
        static libnodave.daveOSserialType fds;
        static libnodave.daveInterface di;
        static libnodave.daveConnection dc;
        static int rack = 0;
        static int slot = 0;
        #endregion

        #region XML相关
        static string strPath = "PLCGroup.xml";
        static string strID = "";

        #endregion

        public Form1()
        {
            InitializeComponent();
        }

      


        private void Form1_Load(object sender, EventArgs e)
        {
            #region 得到配置文件
            if (File.Exists(strPath))
            {
              
                getXmlInfo();
               // this.listBox1.Items.Add(slot);
            }
            else
                this.listBox1.Items.Add("请先配置PLC地址");

            #endregion

            textBox1.Text = "951";
            textBox2.Text = "0";
            textBox3.Text = "240";
            textBox5.Text = "10";
            textBox6.Text = "951";

            if (textBox7.Text!="")
            {
              //  ConnPLC();
            }
            dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;//选择时可以选择一整行
            dataGridView1.ReadOnly = true;//设置控件只能只读
            dataGridView1.DefaultCellStyle.SelectionBackColor = Color.Green;//设置选中行显示绿色

        }
        #region 将XML文件内容绑定到DataGridView控件
        /// <summary>
        /// 将XML文件内容绑定到DataGridView控件
        /// </summary>
        private void getXmlInfo()
        {
            DataSet myds = new DataSet();
            myds.ReadXml(strPath);
            dataGridView1.DataSource = myds.Tables[0];
            textBox7.Text = dataGridView1.CurrentRow.Cells[1].Value.ToString(); //ip 
            textBox8.Text = dataGridView1.CurrentRow.Cells[0].Value.ToString(); //Name 
            textBox9.Text = dataGridView1.CurrentRow.Cells[2].Value.ToString(); //Solt 

            // slot = Convert.ToInt16(textBox9.Text);  这种转换也可以
            slot = int.Parse(textBox9.Text);
        }
        #endregion

        private void ConnPLC()
        {
            int i, a = 0, 
                j, res, 
                b = 0, 
                c = 0;
            float d = 0;


          

            //打开一个Socket fds.rfd = openSocket(102, IPaddress_of_CP);
            // fds.rfd = libnodave.openSocket(102, "10.228.142.238");
            fds.rfd = libnodave.openSocket(102, textBox7.Text.ToString());
          
            fds.wfd = fds.rfd;
            if (fds.rfd > 0)
                //di = daveNewInterface(rfd, rfd, name, 0, daveProtoISOTCP, daveSpeed187k)
                //用的什么协议   di=daveNewInterface(fds, "IF1", localMPI, daveProtoXXX, daveSpeedYYY);
                di = new libnodave.daveInterface(fds, "IF1", 0, libnodave.daveProtoISOTCP, libnodave.daveSpeed187k);
                di.setTimeout(1000000);
                dc = new libnodave.daveConnection(di, 0, rack, slot);

                //初始化适配器
                res = di.initAdapter();

                //dc =daveNewConnection(di, MPI_address, Rack, Slot);
                dc = new libnodave.daveConnection(di, 0, rack, slot);

                  // res=dc.connectPLC();
            if (0 == dc.connectPLC())
            {
                res = dc.readBytes(libnodave.daveFlags, 0, 0, 16, null);
                if (res == 0)
                {
                    a = dc.getS32();
                    b = dc.getS32();
                    c = dc.getS32();
                    d = dc.getFloat();
                    this.listBox1.Items.Add("连接成功");
                    this.listBox1.Items.Add("FD0: " + a);
                    this.listBox1.Items.Add("FD4: " + b);
                    this.listBox1.Items.Add("FD8: " + c);
                    this.listBox1.Items.Add("FD12: " + d);
                }
            }
            else
                this.listBox1.Items.Add("error " + res + " " + libnodave.daveStrerror(res));
        }

        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
            // daveDisconnectPLC(dc)
            //daveDisconnectAdapter(di)

            //dc.disconnectPLC();
            //di.disconnectAdapter();

        }

    

 

        private void btnWriteDB_Click(object sender, EventArgs e)
        {
          

            int res = 0;
            int i = 0;
          
            byte[] buf = new byte[8];
            this.listBox1.Items.Clear();

            //  buf[0] =Convert.ToByte( MathFunctions.Asc("7"));

            if (textBox4.Text.Length == 8)
            {
               
                for (i = 0; i < 8; i++)
                {
                    // this.listBox1.Items.Add(buf[i].ToString()) ;
                    //this.listBox1.Items.Add(textBox4.Text.Substring(i, 1));

                    buf[i] = Convert.ToByte(MathFunctions.Asc(textBox4.Text.Substring(i, 1)));
                    //this.listBox1.Items.Add(buf[i].ToString());
                }

                res = dc.writeBytes(libnodave.daveDB, Convert.ToInt32(textBox6.Text), Convert.ToInt32(textBox5.Text), 8, buf);

                if (res==0)
                {

                    this.listBox1.Items.Add("写完成");
                }
                else
                    this.listBox1.Items.Add("error " + res + " " + libnodave.daveStrerror(res));


            }
            //  this.listBox1.Items.Add(textBox4.Text.Substring(0, 1));
            else
                //this.listBox1.Items.Clear();
                 this.listBox1.Items.Add("Err：FIS号长度必须是8位！" );


        }

        private void 配置ToolStripMenuItem_Click(object sender, EventArgs e)
        {

           
           
        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

      

       

        private void button3_Click(object sender, EventArgs e)
        {
            int res;
            this.listBox1.Items.Clear();
            res =dc.disconnectPLC();
            if (res == 0)
            {
                this.listBox1.Items.Add("断开成功");
                di.disconnectAdapter();
            }
            else
                this.listBox1.Items.Add("error " + res + " " + libnodave.daveStrerror(res));
        }

        private void btnReadDBW_Click_1(object sender, EventArgs e)
        {
            int res = 0;
            string str = "";
            //声明字节数组
            byte[] buf = new byte[Convert.ToInt32(textBox3.Text)];


            //res=daveReadBytes(dc, AREA,   area_Number,    start_address,     length,                 buffer);

            res = dc.readBytes(libnodave.daveDB, Convert.ToInt32(textBox1.Text), Convert.ToInt32(textBox2.Text),
                Convert.ToInt32(textBox3.Text), buf);

            if (res == 0)
            {
                this.listBox1.Items.Clear();
                for (int i = 0; i < Convert.ToInt32(textBox3.Text); i++)
                {
                    this.listBox1.Items.Add("ASCII：" + MathFunctions.Chr(buf[i]));
                    str += MathFunctions.Chr(buf[i]);
                }
                richTextBox1.Text = str;
                btnReadDBW.Enabled = false;
                Thread.Sleep(1000);
                btnReadDBW.Enabled = true;
            }
            else
                this.listBox1.Items.Add("error " + res + " " + libnodave.daveStrerror(res));
        }

        private void button2_Click_1(object sender, EventArgs e)
        {
            this.listBox1.Items.Clear();
            this.listBox1.Items.Add("PLC：" + textBox8.Text.ToString());
            this.listBox1.Items.Add("IP：" + textBox7.Text.ToString());
            this.listBox1.Items.Add("Slot：" + slot);
            ConnPLC();
        }
        
        private void dataGridView1_CellContentClick_1(object sender, DataGridViewCellEventArgs e)
        {
           
        }

        private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            textBox7.Text = dataGridView1.CurrentRow.Cells[1].Value.ToString(); //ip 
            textBox8.Text = dataGridView1.CurrentRow.Cells[0].Value.ToString(); //Name 
            textBox9.Text = dataGridView1.CurrentRow.Cells[2].Value.ToString(); //Solt 
            this.listBox1.Items.Clear();

            this.listBox1.Items.Add(textBox7.Text);
            if (textBox9.Text != "")
            {
                slot = int.Parse(textBox9.Text);
                this.listBox1.Items.Add(slot);
            }
        }

        

        private void button1_Click(object sender, EventArgs e)
        {
            //this.listBox1.Items.Add("十进制数：" + MathFunctions.Asc("A"));
            // label4.Text = textBox4.Text.Length.ToString ();
            getXmlInfo();
        }
    }
}
