<template>
  <div class="page-container">
    <!--工具栏-->
    <el-dialog title="物料"
               width="50%"
               :visible.sync="itemDialogVisible"
               :before-close="handleClose">
      <div class="toolbar"
           style="float:left;padding-top:10px;padding-left:15px;">
        <el-form :inline="true"
                 :model="filters"
                 :size="size">
          <el-form-item>
            <el-input v-model="filters.name"
                      :placeholder="$t('item.please enter')"></el-input>
          </el-form-item>
          <el-form-item>
            <el-input v-model="filters.modelSpecs"
                      placeholder="请输入规格型号"></el-input>
          </el-form-item>
          <el-form-item>
            <el-input v-model="filters.packageSpecs"
                      placeholder="请输入包装规格"></el-input>
          </el-form-item>
        </el-form>
      </div>

       <div class="toolbar"
         style="float:left;padding-top:0px;padding-left:15px;">
      <el-form :inline="true"
               :model="filters"
               :size="size">
          <el-form-item>
            <el-form-item>
            <el-input v-model="filters.code"
                      placeholder="请输入物料编码"></el-input>
          </el-form-item>
            <kt-button icon="fa fa-search"
                       :label="$t('action.search')"
                       perms="material:item:view"
                       type="primary"
                       @click="findPage(null)" />
          </el-form-item>
      </el-form>
    </div>

      <!--表格内容栏-->
      <item-kt-table :height="350"
                     :data="pageResult"
                     :columns="filterColumns"
                     @findPage="findPage"
                     permsSelect="sys:user:delete"
                     @handleSelect="handleSelect"> </item-kt-table>

      <div slot="footer"
           class="dialog-footer">
        <el-button :size="size"
                   @click.native="handleClose">{{$t('action.cancel')}}</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import PopupTreeInput from "@/components/PopupTreeInput"
import ItemKtTable from "@/views/Core/ItemKtTable"
import KtButton from "@/views/Core/KtButton"

import { format } from "@/utils/datetime"
export default {
  components: {
    PopupTreeInput,
    ItemKtTable,
    KtButton
  },
  props: {
    fromCorpId: {  // 供应商主键
      type: Number
    },
    itemDialogVisible: {
      type: Boolean
    }
  },
  data () {
    return {
      size: 'small',
      filters: {
        name: ''
      },
      columns: [],
      filterColumns: [],
      pageRequest: { pageNum: 1, pageSize: 10 },
      pageResult: {},

      // 新增编辑界面数据
      editLoading: false,
      dataForm: {
        id: 0,
        //classifyId: ,
        code: '',
        name: '',
        active: 0
      },
      classTypes: []
    }
  },

  methods: {
    //获取分页数据
    findPage: function (data) {

      //   <div class="alert alert-danger">
      //     <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
      //     <strong>Title!</strong> Alert body ...
      //  </div>

      this.filters.supplierId = this.fromCorpId
      if (data !== null) {
        this.filters.pageNum = data.pageRequest.pageNum
        this.filters.pageSize = data.pageRequest.pageSize
      }
      //入库单物料选择
      debugger
      if(this.fromCorpId!=null){
          this.$api.receiptIn.findItemPage(this.filters).then((res) => {
          this.pageResult = res.data
          this.findClassTypes()
        }).then(data != null ? data.callback : '')
      }
      else{
      //出库单物料选择
          this.$api.item.findPage(this.filters).then((res) => {
          this.pageResult = res.data
          this.findClassTypes()
        }).then(data != null ? data.callback : '')
      }


    },
    // 批量删除
    handleSelect: function (data) {
      this.$emit('handleSelect', data)
    },
    //加载物料类别分类
    findClassTypes: function () {
      this.$api.classify.findPage().then((res) => {
        this.classTypes = res.data.content

      })
    },
    handleClose: function () {
      this.$emit('itemHidden', {})
    }
  },
  mounted () {

    this.columns = [
      { prop: "name", label: "item.name", minWidth: 100 },
      { prop: "code", label: "item.code", minWidth: 100 },
      { prop: "modelSpecs", label: "规格型号", minWidth: 100 },
      { prop: "packageSpecs", label: "包装规格", minWidth: 100 }
    ]
    this.filterColumns = JSON.parse(JSON.stringify(this.columns));
  }
}
</script>

<style scoped>
</style>
