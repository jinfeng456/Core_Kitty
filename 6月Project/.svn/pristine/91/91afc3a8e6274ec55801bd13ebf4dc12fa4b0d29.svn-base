using System;
using System.Text;
using System.Linq;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Dapper;
using static Dapper.SqlMapper;
using GK.Common.dto;
using GK.Common;
using GK.DAL.inter;
using GK.DAL.dialect;
using GK.WMS.Common;

namespace GK.WMS.DAL.abs
{//
    public abstract class AbsWMSBaseServer : IBaseServer
    {
        protected IDbConnection Connection
        {
            get { return DBUtils.CreateWMSConnection(WMSDalFactray.prefixal); }
        }
        public Page<T> queryPage<T>(string sql, int start, int end, string orderBy, object param = null)
        {
            if (string.IsNullOrEmpty(sql)){
                return null;
            }
            if ((start <= 0 && end <= 0)){

                return null;
            }
            sql = PageDialect.pageSql(WMSDalFactray.prefixal, sql, start, end, orderBy);
            GridReader ds = Connection.QueryMultiple(sql, param);
            List<T> it = ds.Read<T>().ToList(); ;
            int count = ds.Read<int>().First();
            Page<T> page = new Page<T>();
            page.count = count;
            page.list = it;
            return page;


        }


        public T getById<T>(long id, IDbTransaction transaction = null) where T : class { 
           return  Connection.GetById<T>(WMSDalFactray.prefixal, id, transaction);
        }



       String  sql2dialect(String sql) {
            if (WMSDalFactray.prefixal == GKDBType.oracle) {
                return sql.Replace("@", ":");
            }
            return sql;
        }
    }
   
}
