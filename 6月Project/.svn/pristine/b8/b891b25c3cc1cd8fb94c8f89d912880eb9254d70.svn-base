using System;
using GK.WCS.Common.task;
using GK.WCS.Carrier;
using CMNetLib.Robots.CarrierChain;
using GK.WCS.Scan;
using GK.WCS.Common.core.dto;
using GK.WCS.Common;
using System.Threading;
using HY.Ws.Mes;
using GK.WCS.DAL;
using GK.WCS.Entity;

namespace GK.WCS.Controller {
    public class CarrierBeginTask1:CarrierBeginTaskAbs {

        INoTaskControlServer noTaskControlDAL = ServerFactray.getServer<INoTaskControlServer>();

        public override void onlyOneTime() {
             connect = TaskPool.get<CarrierWriteConnect1>();
             dateLogicReader = TaskPool.get<DateLogicReader1>();
        }
        public override void excute() {
          
           HyMachineState ms = CarrierPool.getMs(1,2);
            contralscan(dateLogicReader,ms);
            HySignalState hss = CarrierPool.getSs(1021);
            if (hss == null) {
                return;
            }
            if(hss.TaskNo > 0) {
                dateLogicReader.getStopScan();
                return;
            }
            //code += DateTime.Now.Ticks / 10000000;
            CarrierSignal1 carrierSignal1 = TaskPool.get<CarrierSignal1>();
            if(carrierSignal1.canRead != 1) {
                return;
            }
            String code = dateLogicReader.getData();
            if(String.IsNullOrEmpty(code)) {
                LoggerCommon.consol("本色光纤扫码枪code：" + code);
            } else {
                LoggerCommon.fileAll("本色光纤扫码枪code：" + code);
            }
            if(String.IsNullOrWhiteSpace(code)) {
                HyMachineState hms =  CarrierPool.getMs(1,2);
                if(hms.Status == MachineStatus.自动状态下停止&& hss.needTask()) {
                    connect.SendTask(0,102,104);
                }
                return;
              
            }
            dateLogicReader.getStopScan();
            int width = carrierSignal1.width;
            if(width < 90) {
                LoggerCommon.fileAll("1号入库口测宽" + width);
                connect.SendTask(0,102,104);
                return;
            }
            WsMes.yingrkshuj(code);
            if(!WsMes.rkCheck(code)) {
                LoggerCommon.fileAll("1号入库口MES验证失败" + code);

                connect.SendTask(0,102,104);
                return;
            }


             saveAndcreateInfoTask(102,code,width,1);
            ITaskCarrierServer CarrierDAL = ServerFactray.getServer<ITaskCarrierServer>();
            TaskCarrier carrier = CarrierDAL.getByCode(code);
            if(carrier != null) {
                sendCrarrer(connect,carrier);
                Thread.Sleep(2000);
            }
        }

    }
}
