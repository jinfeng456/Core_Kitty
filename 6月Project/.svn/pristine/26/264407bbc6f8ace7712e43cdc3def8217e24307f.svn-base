<template>
  <div class="page-container">
    <!--工具栏-->
    <el-dialog :title="$t('field.receipt.stack')" width="50%" :visible.sync="itemDialogVisible"  :before-close="handleClose">
	
      <div class="toolbar" style="float:left;padding-top:10px;padding-left:15px;">
          <el-form :inline="true"  :model="filters"  :size="size">
          <el-form-item>
            <el-input v-model="filters.boxCode"  :placeholder="$t('item.please enter')"></el-input>
          </el-form-item>
          <el-form-item>
            <kt-button icon="fa fa-search"
                      :label="$t('action.search')"
                      perms="material:item:view"
                      type="primary"
                      @click="findPage(null)" />
          </el-form-item>
        
        </el-form>
      </div>
      <!--表格内容栏-->
      <stock-kt-table :height="350" :data="pageResult" :columns="filterColumns" @findPage="findPage" permsSelect="sys:user:delete"
    @handleSelect="handleSelect"  :showBatchDelete="!this.showReceipOutId" :showOperation="!this.showReceipOutId" > </stock-kt-table>

      <div slot="footer" class="dialog-footer">
			<el-button :size="size" @click.native="handleClose">{{$t('action.cancel')}}</el-button>
		</div>
    </el-dialog>
  </div>
</template>

<script>
import PopupTreeInput from "@/components/PopupTreeInput"
import StockKtTable from "@/views/Receipt/ReceiptOut/CheckOut/StockKtTable"
import KtButton from "@/views/Core/KtButton"


import { format } from "@/utils/datetime"
export default {
  components: {
    PopupTreeInput,
    StockKtTable,
    KtButton
  },
  props:{		 
	    itemDialogVisible:{
			type: Boolean
    },
    showReceipOutId:{
			type: Boolean
    },
    dataForms:{
			type: Object
		},
	},
  data () {
    return {
      size: 'small',
      filters: {
        boxCode: ''
      },
      columns: [],
      filterColumns: [],
      pageRequest: { pageNum: 1, pageSize: 10 },
      pageResult: {},
      // 新增编辑界面数据
      editLoading:false,
      dataForm: {
        id: 0,
        //classifyId: ,
        code: '',
        name: '',
        active: 0
      },
      classTypes: []
    }
  },
 
  methods: {
    //获取分页数据
    findPage: function (data) {
      if (data !== null) {
        this.filters.pageNum = data.pageRequest.pageNum
        this.filters.pageSize = data.pageRequest.pageSize    
        this.filters.batchId =this.dataForms.batchId
        this.filters.itemId =this.dataForms.itemId  
        this.filters.stockStatus = 2
        //成品抽检出库类型
        if(this.showReceipOutId)
        {
          this.filters.receiptlOutId =this.dataForms.id    
        }  
      }
      this.$api.coreStock.QueryCoreStockDetailPage(this.filters).then((res) => {
        this.pageResult = res.data
        //this.findClassTypes()
      }).then(data != null ? data.callback : '')

    },
    // 批量选中
    handleSelect: function (data) {
        this.$emit('handleSelect', data)
    },
    //加载物料类别分类
    findClassTypes: function () {
      this.$api.classify.findPage().then((res) => {
        this.classTypes = res.data.content
       
      })
    },
    handleClose:function(){
  			this.$emit('itemHidden', {})
    },	
		selectionFormat: function (row, column, cellValue, index){
			let key=""
			let propt=column.property;
			if(propt=="pileType"){
				key="trayType"
			}else if(propt=="status" || propt=="stockStatus"){
				key="stockStatus"
			}
			else if(propt=="pkStatus"){
				key="pkStatus"
			}else if(propt=="bussStatus"){
				key="businessStatus"
			}else if(propt=="locked"){
				key="isLocked"
			}
		    let val=row[column.property];
			let dict = this.$store.state.dict.dicts[key];
			if(dict==undefined){
					return row[column.property]
			}
			for(let i=0;i<dict.length;i++){
				if(dict[i].value==val){
					return dict[i].label;
				}
			}
          	return row[column.property]
     }
  },
  mounted () {

      this.columns = [
       //{prop:"id", label:"", minWidth:100},
				//{prop:"stockId", label:"", minWidth:100},
				//{prop:"whId", label:"", minWidth:100},
				//{prop:"pos", label:"", minWidth:100},
				//{prop:"loctionId", label:"", minWidth:100},
				//{prop:"itemId", label:"", minWidth:100},
				{prop:"itemCode", label:"产品编号", minWidth:100},
				//{prop:"receiptlnId", label:"", minWidth:100},
				//{prop:"receiptlOutId", label:"", minWidth:100},
				//{prop:"soOutId", label:"", minWidth:100},
				{prop:"wmsBanchNo", label:"批次号", minWidth:100},
				{prop:"countDb", label:"库存数量", minWidth:100},
				//{prop:"pkStatus", label:"盘库状态", minWidth:100,formatter:this.selectionFormat},
				{prop:"stockStatus", label:"库存状态", minWidth:100,formatter:this.selectionFormat},
        //{prop:"bussStatus", label:"业务状态", minWidth:100,formatter:this.selectionFormat},
        {prop:"inTime", label:"入库时间", minWidth:120,formatter:this.dateFormat},
				{prop:"outTime", label:"出库时间", minWidth:120,formatter:this.dateFormat},
				//{prop:"businessCreateTime", label:"生产日期", minWidth:120,formatter:this.dateFormat},
				//{prop:"exp", label:"保质期", minWidth:120,formatter:this.dateFormat},
      ]
      this.filterColumns = this.columns;
  }
}
</script>

<style scoped>
</style>