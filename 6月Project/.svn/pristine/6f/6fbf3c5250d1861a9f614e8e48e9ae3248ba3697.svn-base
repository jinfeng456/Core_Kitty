using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using Dapper;
using GK.Common.trans;
using GK.WCS.DAL;
using GK.WCS.Entity;
using GK.WCS.Entity.wcs;

namespace GK.Engine.WCS
{
     class WcsCreateOutEngine : WcsBaseEngine
    {
        public long completeId;
        public long wmstaskId;
        public  int srcId;
        public int desId;
        public string boxCode;
        public int itemType;
        public long relyTaskId;
        public long tCompPId;
        protected override bool Execute(IDbConnection connection, IDbTransaction transaction) {

          
            long relyCraneId=-1;
            long srcTaskId;
            int TaskNo;
            string relyName=null;
            long id;
            TaskComplete taskComplete;
            TaskCrane taskCrane;
            int carrierBegin;
            string sql1 = "select * from dbo.Task_complete where wms_Task_Id=@wmstaskId";
            taskComplete = connection.Query<TaskComplete>(sql1, new { wmstaskId = wmstaskId }, transaction).FirstOrDefault();
   
            string sql2 = "select * from dbo.Task_crane where complete_Id=@relyComleteId";
            taskCrane = connection.Query<TaskCrane>(sql2, new { relyComleteId = taskComplete.id },transaction).FirstOrDefault();
            if (taskCrane != null)
            {
                relyCraneId = taskCrane.id;
                if (taskCrane.deviceType == 1)
                {
                    relyName = "crane";
                }
                else
                {
                    relyName = "carrier";
                }
            }
           
            TaskNo = CommentFunction.BBTaskNo(connection, transaction);
            carrierBegin= CommentFunction.getInstockEndCarrier(srcId, desId);
            ISequenceIdServer sequenceIdServer = ServerFactray.getServer<ISequenceIdServer>();
            id = sequenceIdServer.getId();
            CommentFunction.BCrane(connection,transaction, itemType, TaskNo,srcId,carrierBegin,boxCode,completeId,tCompPId,id);
            CommentFunction.BCarrier(connection,transaction,TaskNo,desId,boxCode,completeId,tCompPId,itemType,srcId,id);
            if (taskCrane != null)
            {
                CommentFunction.BCraneRely(connection, transaction, id, "crane", relyCraneId, relyName,completeId);

            }

            string sql3 = "update dbo.Task_complete set status=2 where Id=@completeId";
            connection.Execute(sql3, new { completeId = completeId }, transaction);
            return true;


        }
       
    }
    
}
