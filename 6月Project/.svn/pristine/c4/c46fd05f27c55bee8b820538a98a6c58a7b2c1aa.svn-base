using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace GK.WCS.Common
{
    public static class  LoggerCache {
        private static List<ShowCache> cacheList=new List<ShowCache>();

       public static List<ShowCache> getAll() {
            List<ShowCache> list = new List<ShowCache>();
            lock(cacheList) {
                for(int i = cacheList.Count-1;i >=0 ;i--) {
                    list.Add(cacheList[i]);
                }
            }
            return list;
         }
        public static bool has(String msg) {
           
            lock(cacheList){
                while(true) {
                    if(cacheList.Count == 0) {
                        break;
                    }
                    ShowCache sc = cacheList[0];
                    if(DateTime.Now.Ticks - sc.timeTicks > 20 * 1000 * 10000) {
                        cacheList.RemoveAt(0);
                    } else {
                        break;
                    }
                }
                for(int i=0;i<cacheList.Count;i++) {
                    ShowCache c=cacheList[i];
                    if(msg==c.Msg) {
                        return true;
                    }
                }
                cacheList.Add(new ShowCache(msg));

               
            }
      
            return false;
        }

    }

  

    [Serializable]
    public class ShowCache {

       
        public string Msg { get; set; }
        public long timeTicks
        {
            get; set;
        }

        public ShowCache(string msg) {
            Msg=msg;
            timeTicks=DateTime.Now.Ticks;
        }
    }


}
