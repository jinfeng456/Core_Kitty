
using System;
using System.Data;
using Dapper;
using System.Collections.Generic;
using GK.WMS.Entity;
using System.Linq;

namespace GK.Engine.WMS
{
    abstract class StockInEngine : WmsBaseEngine
    {
        String boxCode;
        int stn;

        CoreStock getstock(IDbTransaction transaction)
        {
            String sql = "SELECT *  FROM [wms].[dbo].[Core_stock]   where box_Code=@boxCode";
            List<CoreStock> list = connection.Query<CoreStock>(sql, new { boxCode = boxCode }, transaction).ToList();
            if (list.Count != 1)
            {
                throw new Exception(boxCode + "对应托盘不唯一");
            }
            CoreStock stock = list[0];
            return stock;
        }


        CoreStockDetail getStockDetail(IDbTransaction transaction)
        {
            String sql = "SELECT *  FROM [wms].[dbo].[Core_Stock_Detail]   where box_Code=@boxCode";
            List<CoreStock> list = connection.Query<CoreStock>(sql, new { boxCode = boxCode }, transaction).ToList();
            if (list.Count != 1)
            {
                throw new Exception(boxCode + "对应托盘不唯一");
            }
            CoreStock stock = list[0];
            return null;
        }



        protected override bool Execute(IDbConnection connection, IDbTransaction transaction)
        {

            CoreStock stock = null;
            String sql = "SELECT * FROM [wms].[dbo].[Core_task]  where stock_Id=@stockId and Task_Type=1 and Status<>4";
            List<CoreTask> taskList = connection.Query<CoreTask>(sql, new { stockId = stock.id }, transaction).ToList();
            if (taskList.Count > 0)
            {
                throw new Exception(boxCode + "入库任务没有完成");
            }


            CoreTask task = new CoreTask();

            task.stockId = stock.id;
            task.areaId = stock.areaId ?? 0;
            task.boxCode = stock.boxCode;
            task.status = 2;
            task.taskType = 1;
            task.createTime = DateTime.Now;
            task.maxstock = 1;
            task.src = stn;

            connection.Execute("update Core_stock set status=1 where id=@id ", new { id = stock.id }, transaction);

            return true;
        }




    }
}
